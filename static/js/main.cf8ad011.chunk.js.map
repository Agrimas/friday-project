{"version":3,"sources":["components/common/c1-SuperInputText/SuperInputText.module.css","components/common/c3-SuperCheckbox/SuperCheckbox.module.css","components/common/c2-SuperButton/SuperButton.module.css","components/Header/Header.tsx","components/common/c3-SuperCheckbox/SuperCheckbox.tsx","components/common/c1-SuperInputText/SuperInputText.tsx","components/common/c2-SuperButton/SuperButton.tsx","components/Test/Test.tsx","components/App/App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","Header","React","useState","anchorEl","setAnchorEl","handleClose","classes","AppBar","position","Toolbar","IconButton","edge","className","color","aria-label","onClick","event","currentTarget","Menu","id","keepMounted","open","Boolean","onClose","to","MenuItem","SuperCheckbox","type","onChange","onChangeChecked","children","spanClassName","restProps","checked","isChecked","setChecked","finalInputClassName","s","checkbox","e","SuperInputText","onChangeText","onKeyPress","onEnter","error","finalSpanClassName","errorInput","superInput","value","key","SuperButton","red","finalClassName","default","Test","App","exact","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cf8ad011.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__4vRCL\",\"errorInput\":\"SuperInputText_errorInput__1jPDD\",\"error\":\"SuperInputText_error__3NdDX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2LQwT\",\"spanClassName\":\"SuperCheckbox_spanClassName__37wpt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1x4BG\",\"red\":\"SuperButton_red__4xBq0\"};","import {AppBar, IconButton, makeStyles, Menu, MenuItem} from '@material-ui/core';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n    },\r\n}));\r\n\r\nfunction Header() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const classes = useStyles();\r\n    return (\r\n        <AppBar position=\"static\">\r\n            <Toolbar>\r\n\r\n                <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\"\r\n                            onClick={handleClick}>\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n\r\n                <Menu\r\n                    id=\"header\"\r\n                    anchorEl={anchorEl}\r\n                    keepMounted\r\n                    open={Boolean(anchorEl)}\r\n                    onClose={handleClose}\r\n                >\r\n                    <NavLink to={'/'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            Main\r\n                        </MenuItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={'/register'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            Register\r\n                        </MenuItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={'/login'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            Login\r\n                        </MenuItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={'/password_recovery'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            Recovery password\r\n                        </MenuItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={'/password_new'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            New password\r\n                        </MenuItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={'/profile'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            Profile\r\n                        </MenuItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={'/test'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            Test\r\n                        </MenuItem>\r\n                    </NavLink>\r\n\r\n                    <NavLink to={'/404'}>\r\n                        <MenuItem onClick={handleClose}>\r\n                            404\r\n                        </MenuItem>\r\n                    </NavLink>\r\n                </Menu>\r\n            </Toolbar>\r\n        </AppBar>\r\n    );\r\n}\r\n\r\nexport default Header;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, useState} from 'react'\r\nimport s from './SuperCheckbox.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeChecked,\r\n        className,\r\n        spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [isChecked, setChecked] = useState(restProps.checked ?? false)\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n        onChange && onChange(e);\r\n        setChecked(!isChecked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={'checkbox'}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n                checked={isChecked}\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    )\r\n}\r\n\r\nexport default SuperCheckbox\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './SuperInputText.module.css'\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n}\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange,\r\n        onChangeText,\r\n        onKeyPress,\r\n        onEnter,\r\n        error,\r\n        className,\r\n        spanClassName,\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange // если есть пропс onChange\r\n        && onChange(e) // то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value)\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        onEnter // если есть пропс onEnter\r\n        && e.key === 'Enter' // и если нажата кнопка Enter\r\n        && onEnter() // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\r\n    const finalInputClassName = `${error? s.errorInput : s.superInput + ' ' + className}` // need to fix with (?:) and s.superInput\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={'text'}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default SuperInputText\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport s from './SuperButton.module.css'\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    )\r\n}\r\n\r\nexport default SuperButton\r\n","import React from 'react';\r\nimport SuperCheckbox from '../common/c3-SuperCheckbox/SuperCheckbox';\r\nimport SuperInputText from '../common/c1-SuperInputText/SuperInputText';\r\nimport SuperButton from '../common/c2-SuperButton/SuperButton';\r\n\r\nfunction Test() {\r\n    return (\r\n        <div>\r\n            <h1>Test</h1>\r\n            <SuperInputText/>\r\n            <SuperCheckbox/>\r\n            <SuperButton>Super Button</SuperButton>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Test;","import React from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport logo from '../../logo.svg';\nimport './App.css';\nimport Header from '../Header/Header';\nimport Test from '../Test/Test';\n\nfunction App() {\n    return (\n        <>\n            <Header/>\n            <Switch>\n                <Route exact path={'/'} render={() => <h1>Main</h1>}/>\n                <Route path={'/login'} render={() => <h1>Login</h1>}/>\n                <Route path={'/register'} render={() => <h1>Register</h1>}/>\n                <Route path={'/password_recovery'} render={() => <h1>Recovery password</h1>}/>\n                <Route path={'/password_new'} render={() => <h1>New password</h1>}/>\n                <Route path={'/profile'} render={() => <h1>Profile</h1>}/>\n                <Route path={'/test'} render={() => <Test/>}/>\n                <Route render={() => <h1>404</h1>}/>\n            </Switch>\n        </>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}